name: CI

on:
  # Enable option to manually run the action:
  workflow_dispatch:

  # Run on the `main` branch or on PRs that target it:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Run the pipeline for each PR part of merge queues as well
  merge_group:

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --accept-flake-config --impure .#devShells.x86_64-linux.default || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Check formatting
        run: npm run format:check

      - name: nix flake check
        run: nix flake check --impure

  smart-contracts-tests:
    timeout-minutes: 360
    runs-on: [self-hosted, nixos, x86-64-v3]

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --impure .#devShells.x86_64-linux.default || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Install JS deps
        run: yarn install

      - name: Build all contracts
        run: yarn build:recursive @blocksense/contracts

      - name: Test all contracts
        run: yarn workspace @blocksense/contracts test

      - name: Measure test coverage
        run: yarn workspace @blocksense/contracts coverage

      - name: Measure contract size
        run: yarn workspace @blocksense/contracts size

  docs_website:
    timeout-minutes: 360
    runs-on: [self-hosted, nixos, x86-64-v3]

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --impure .#devShells.x86_64-linux.default || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Install JS deps
        run: yarn install

      - name: Build
        run: yarn workspace @blocksense/docs.blocksense.network build

      - name: Test `@blocksense/base-utils`
        run: yarn workspace @blocksense/base-utils test

      - name: Test
        run: yarn workspace @blocksense/docs.blocksense.network test

  explorer_website:
    timeout-minutes: 360
    runs-on: [self-hosted, nixos, x86-64-v3]

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --impure .#devShells.x86_64-linux.default || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Install JS deps
        run: yarn install

      - name: Build
        run: yarn workspace @blocksense/explorer.blocksense.network build

  rust:
    timeout-minutes: 360
    runs-on: [self-hosted, nixos, x86-64-v3]

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --impure .#devShells.x86_64-linux.default || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Build Rust workspace
        run: cargo build

      - name: Test Rust workspace
        run: cargo test

      - name: Run Cargo Clippy
        run: cargo clippy -- --deny warnings

      - name: Build and install oracle trigger plugin
        run: ./scripts/sdk/build-and-install-plugin.sh

  rust-nix-build:
    timeout-minutes: 360
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Nix build Rust workspace
        run: nix build --impure --json -L --accept-flake-config .#blocksense-rs

  deploy_websites:
    timeout-minutes: 360
    runs-on: [self-hosted, nixos, x86-64-v3]
    strategy:
      matrix:
        include:
          - project: docs
            vercel_project: docs.blocksense.network
          # - project: explorer
          #   vercel_project: explorer.blocksense.network
      # explorerDeploymentMessage: ${{ steps.collect-explorer.outputs.message }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        if: ${{ runner.environment == 'github-hosted' }}
        with:
          extra-conf: accept-flake-config = true

      - uses: cachix/cachix-action@v15
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build & activate the Nix Dev Shell
        run: |
          eval "$(nix print-dev-env --accept-flake-config --impure .#devShells.x86_64-linux.js || echo exit 1)"
          env >> "$GITHUB_ENV"

      - name: Install JS deps
        run: yarn install

      - name: Build the website
        run: |
          (
            cd apps/docs.blocksense.network
            yarn build
          )

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/docs.blocksense.network/dist --project-name=blocksense
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}``
