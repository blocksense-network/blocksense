name: CI

on:
  # Enable option to manually run the action:
  workflow_dispatch:

  # Run on the `main` branch or on PRs that target it:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf:
            accept-flake-config = true

      - uses: cachix/cachix-action@v14
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: nix flake check
        run: nix flake check --impure

      - name: Build the Nix Dev Shell
        run: nix build --impure .#devShells.x86_64-linux.default

      - name: Check formatting
        run: nix develop --impure -c npm run format:check

  hardhat:
    timeout-minutes: 360
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf:
            accept-flake-config = true

      - uses: cachix/cachix-action@v14
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build the Nix Dev Shell
        run: nix build --impure .#devShells.x86_64-linux.default

      - name: Install JS deps
        run: nix develop --impure -c yarn install

      - name: Build all contracts
        run: nix develop --impure -c yarn workspace @blocksense/contracts build

      - name: Test all contracts
        run: nix develop --impure -c yarn workspace @blocksense/contracts test

      - name: Measure test coverage
        run: nix develop --impure -c yarn workspace @blocksense/contracts coverage

      - name: Measure contract size
        run: nix develop --impure -c yarn workspace @blocksense/contracts size

  rust:
    timeout-minutes: 360
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf:
            accept-flake-config = true

      - uses: cachix/cachix-action@v14
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: nix flake check
        run: nix flake check --impure

      - name: Build the Nix Dev Shell
        run: nix build --impure .#devShells.x86_64-linux.default

      - name: Build Rust workspace
        run: nix develop --impure -c cargo build
