/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-nix-berry",
factory: function (require) {
var plugin=(()=>{var x=Object.create;var d=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var m=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(i,s)=>(typeof require<"u"?require:i)[s]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var P=(e,i)=>{for(var s in i)d(e,s,{get:i[s],enumerable:!0})},w=(e,i,s,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of b(i))!D.call(e,n)&&n!==s&&d(e,n,{get:()=>i[n],enumerable:!(t=M(i,n))||t.enumerable});return e};var _=(e,i,s)=>(s=e!=null?x(j(e)):{},w(i||!e||!e.__esModule?d(s,"default",{value:e,enumerable:!0}):s,e)),I=e=>w(d({},"__esModule",{value:!0}),e);var H={};P(H,{default:()=>G});var k=m("@yarnpkg/core"),g=_(m("@yarnpkg/parsers")),S=m("child_process"),a=_(m("fs")),T=!1,O="nix/pkgs/yarn/offline-cache/",r={missing_hash:{path:O+"missing-hash.json",lastModified:"1970-01-01T00:00:00Z"},nix_hash:{path:O+"nix-hash.txt",lastModified:"1970-01-01T00:00:00Z"},yarn_lock:{path:"yarn.lock",lastModified:"1970-01-01T00:00:00Z"},processed_yarn_lock:{path:"/tmp/yarn.lock",lastModified:"1970-01-01T00:00:00Z"}},y={};function F(e){return new Promise((i,s)=>{e.on("error",s),e.on("exit",(t,n)=>{t!==0&&s(new Error(`Process exited with code ${t}`)),i(void 0)}),e.on("close",(t,n)=>{t!==0&&s(new Error(`Process exited with code ${t}`)),i(void 0)})})}function E(e,i){let s=e.report;return async function(t,n,p){if(r[n].lastModified>=r.yarn_lock.lastModified){s.reportInfo(0,p.skip);return}let o=i.progressViaTitle();s.reportInfo(0,p.progress);let f=await s.reportProgress(o),c=(0,S.spawn)(t.name,t.args,{shell:!0,cwd:e.cwd}),u=F(c),l=a.createWriteStream(r[n].path);c.stdout.on("data",h=>{l.write(h.toString().trim())}),c.stderr.on("data",h=>{T&&s.reportInfo(0,h.toString().trim()),o.setTitle(h.toString().trim().split(`
`)[0])}),c.on("exit",h=>{h==0&&s.reportInfo(0,p.finish),l.end(),f.stop()}),await u}}function Z(e,i){let s=a.readFileSync(r.yarn_lock.path,"utf8"),t=g.parseSyml(s),n=JSON.parse(a.readFileSync(r.missing_hash.path,"utf8"));for(let o of Object.keys(n))Object.hasOwn(t,o)&&(delete t[o],y[o]=n[o]);let p=Object.keys(y);for(let o of Object.keys(t)){let f=c=>{if(Object.hasOwn(t[o],c))for(let u of p){let l=u.split("@npm")[0];Object.hasOwn(t[o][c],l)&&delete t[o][c][l]}};f("dependencies"),f("peerDependencies"),f("dependenciesMeta"),f("peerDependenciesMeta")}a.writeFileSync(r.processed_yarn_lock.path,s.split(`
`).slice(0,3).join(`
`)+`
`+g.stringifySyml(t))}var C={name:"nix-berry",hooks:{async afterAllInstalled(e,i){let s=i.report;Object.keys(r).forEach(n=>{r[n].lastModified=a.existsSync(r[n].path)?a.statSync(r[n].path).mtime:r[n].lastModified});let t=E(i,k.Report);await s.startTimerPromise("Generating nix files",async()=>{Z(i,k.Report),await t({name:"yarn-berry-fetcher",args:["missing-hashes",r.processed_yarn_lock.path,r.missing_hash.path]},"missing_hash",{skip:"Missing hashes are up to date",progress:"Generating missing hashes for yarn.lock (may take a while)...",finish:"Missing hashes generated successfully"});let n=JSON.parse(a.readFileSync(r.missing_hash.path,"utf8"));Object.keys(y).length>0&&(a.writeFileSync(r.missing_hash.path,JSON.stringify(Object.assign(n,y),null,2)),s.reportInfo(0,"Updated missing hashes file with new entries")),await t({name:"yarn-berry-fetcher",args:["prefetch",r.yarn_lock.path,r.missing_hash.path]},"nix_hash",{skip:"Yarn nix hash is up to date",progress:"Generating yarn nix hash (may take a while)...",finish:"Yarn nix hash generated successfully"})})}}},G=C;return I(H);})();
return plugin;
}
};
