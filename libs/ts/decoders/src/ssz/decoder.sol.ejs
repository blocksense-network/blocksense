// SPDX-License-Identifier: MIT
pragma solidity ^0.8.28;

<%- unionTypes.map(ut => `import './SSZ_${ut.contractName}${decoderName}.sol';`).join('\n') %>

/// @notice Decoder for stored packed tuple data
<%= unionTypes.length ? 'contract' : 'library' %> <%= unionTypes.length ? structs[0].name : '' %><%= decoderName %> {
  /// @notice User defined struct
  /// @dev Using structs avoids hitting the EVM stack limit
  <%= structs.map((struct) => {
    return `  struct ${struct.name} {
    ${struct.fields.map((fields) => `  ${fields.type} ${fields.name};`).join('\n  ')}
    }`
  }).join('\n\n') %>

  function decode(
    bytes memory data
  ) external <%= unionTypes.length ? '' : 'pure' %> returns (<%= returnType %> memory <%= mainStructName %>) {
    assembly ('memory-safe') {
      <%= lines.join('\n') %>
    }

    <%- subDecoderLines.join('\n') %>
  }
}
